services:
  app:
    container_name: bot
    env_file:
      - .env
    build: ./app
    depends_on:
      - emb
      - db
      - whisper
    volumes:
      - ./app:/src
    restart: always
   
  emb:
    container_name: emb
    build: ./search
    volumes:
      - ./search:/src
    ports:
      - 8001:8001
   
  db:
    container_name: pg_database
    image: postgres:16.4-alpine3.20
    env_file:
      - .env
    environment:
      - POSTGRES_PASSWORD=${PG_PASSWORD}
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_DB=database
      - PGDATA=/data/postgres
    ports:
      - ${PG_PORT}:5432
    volumes:
      - .postgres:/data/postgres
    #command: ["sh", "-c", "sleep 2 && docker exec -it db psql -U database -c 'CREATE EXTENSION postgis;' && psql -U database -f /docker-entrypoint-initdb.d/dump.sql"]
    #command: ["sh", "-c", "sleep 2 && psql -U root -f /docker-entrypoint-initdb.d/dump.sql"]
    #docker exec -i pg_container_name /bin/bash -c "PGPASSWORD=pg_password psql --username pg_username database_name" < /path/on/your/machine/dump.sql

    restart: always

  whisper:
    container_name: whisper
    image: onerahmet/openai-whisper-asr-webservice:v1.6.0
    environment:
      - ASR_ENGINE=faster_whisper
      - ASR_MODEL=medium
      - ASR_MODEL_PATH=/data/whisper
    ports:
      - 9000:9000
    volumes:
      - .model:/data/whisper
    restart: always